<!--
Copyright (c) 2023 Proton AG

This file is part of ProtonVPN.

ProtonVPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ProtonVPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ProtonVPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<UserControl x:Class="ProtonVPN.Account.PromoCodeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:translations="clr-namespace:ProtonVPN.Translations;assembly=ProtonVPN.Translations"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:account="clr-namespace:ProtonVPN.Account"
             xmlns:icons="clr-namespace:ProtonVPN.Resource.Graphics.Icons;assembly=ProtonVPN.Resource"
             xmlns:resource="clr-namespace:ProtonVPN.Resource;assembly=ProtonVPN.Resource"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance account:PromoCodeViewModel}">
    <StackPanel>
        <ToggleButton x:Name="CouponToggleButton"
                      Cursor="Hand"
                      IsChecked="{Binding IsPromoPopupVisible, Mode=TwoWay}"
                      BorderBrush="{StaticResource BorderNormBrushColor}"
                      Foreground="{StaticResource TextNormBrushColor}"
                      HorizontalAlignment="Stretch"
                      Margin="0"
                      Height="40"
                      FontSize="16"
                      BorderThickness="2"
                      FontWeight="SemiBold"
                      Content="{translations:Loc PromoCode_lbl_UseCoupon}">
            <ToggleButton.Style>
                <Style TargetType="ToggleButton" BasedOn="{StaticResource EmptyToggleButton}">
                    <Setter Property="Background" Value="{StaticResource InteractionDefaultHoverBrushColor}" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource InteractionDefaultActiveBrushColor}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
        </ToggleButton>
        <Popup IsOpen="{Binding Path=IsChecked, ElementName=CouponToggleButton, Mode=TwoWay}"
               AllowsTransparency="True"
               Placement="Bottom"
               VerticalOffset="10"
               HorizontalOffset="-20"
               StaysOpen="False">
            <Grid Margin="20">
                <Grid.Effect>
                    <DropShadowEffect ShadowDepth="3" 
                                      Direction="270" 
                                      BlurRadius="12" 
                                      Opacity="0.7"
                                      RenderingBias="Quality" 
                                      Color="{StaticResource ShadowNormColor}"/>
                </Grid.Effect>
                <Border Background="{StaticResource BackgroundNormBrushColor}"
                        BorderBrush="{StaticResource BorderWeakBrushColor}"
                        BorderThickness="1"
                        Width="250"
                        CornerRadius="4">
                    <StackPanel Margin="16,16,16,24" HorizontalAlignment="Center">
                        <Button Style="{StaticResource ClearStyleButton}"
                                cal:Message.Attach="ClosePopup"
                                HorizontalAlignment="Right"
                                Background="Transparent"
                                BorderBrush="Transparent">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <icons:CrossBig x:Name="CloseIcon"
                                                    Width="16" 
                                                    Height="16"
                                                    Background="Transparent"
                                                    Foreground="{StaticResource TextNormBrushColor}" />
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="CloseIcon" Property="Foreground" Value="{StaticResource InteractionNormHoverBrushColor}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                        <TextBlock Text="{translations:Loc PromoCode_lbl_CouponCode}"
                                   Margin="0,4,0,8"
                                   FontSize="14"
                                   Foreground="{StaticResource TextNormBrushColor}" />
                        <Border BorderBrush="{StaticResource FieldNormBrushColor}" BorderThickness="1" CornerRadius="2">
                            <TextBox Height="40"
                                     Text="{Binding PromoCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     VerticalContentAlignment="Center"
                                     BorderThickness="0"
                                     HorizontalAlignment="Left"
                                     Background="Transparent"
                                     CaretBrush="{StaticResource TextNormBrushColor}"
                                     CharacterCasing="Upper"
                                     Width="210"
                                     Foreground="{StaticResource TextNormBrushColor}"
                                     Padding="12,0"
                                     FontSize="16" />
                        </Border>
                        <TextBlock Text="{Binding Error}"
                                   TextWrapping="Wrap"
                                   Foreground="{StaticResource SignalDangerBrushColor}"
                                   Margin="0,8,0,0">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Error}" Value="">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <Grid Margin="0,16,0,0">
                            <Button Style="{StaticResource PrimaryModalButton}"
                                    Margin="0"
                                    Command="{Binding ApplyCouponCodeCommand}"
                                    Content="{translations:Loc PromoCode_btn_Apply}" />
                            <icons:Loader Style="{StaticResource Loader}"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Center"
                                          Foreground="{StaticResource TextNormBrushColor}"
                                          Margin="0,0,16,0"
                                          resource:ControlExtension.Spin="{Binding Sending}"
                                          Visibility="{Binding Sending, Converter={StaticResource BoolToVis}}" />
                        </Grid>
                    </StackPanel>
                </Border>
            </Grid>
        </Popup>
    </StackPanel>
</UserControl>